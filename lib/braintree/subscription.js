// Generated by CoffeeScript 1.10.0
var AttributeSetter, Subscription, Transaction,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

AttributeSetter = require('./attribute_setter').AttributeSetter;

Transaction = require('./transaction').Transaction;

Subscription = (function(superClass) {
  extend(Subscription, superClass);

  Subscription.Source = {
    Api: 'api',
    ControlPanel: 'control_panel',
    Recurring: 'recurring'
  };

  Subscription.Status = {
    Active: 'Active',
    Canceled: 'Canceled',
    Expired: 'Expired',
    PastDue: 'Past Due',
    Pending: 'Pending',
    All: function() {
      var all, key, value;
      all = [];
      for (key in this) {
        value = this[key];
        if (key !== 'All') {
          all.push(value);
        }
      }
      return all;
    }
  };

  function Subscription(attributes) {
    var transactionAttributes;
    Subscription.__super__.constructor.call(this, attributes);
    this.transactions = (function() {
      var i, len, ref, results;
      ref = attributes.transactions;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        transactionAttributes = ref[i];
        results.push(new Transaction(transactionAttributes));
      }
      return results;
    })();
  }

  return Subscription;

})(AttributeSetter);

exports.Subscription = Subscription;

//# sourceMappingURL=subscription.js.map
